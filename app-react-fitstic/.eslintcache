[{"C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\index.tsx":"1","C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\LiftingStateComponent.tsx":"2","C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\posts\\StatisticsComponent.tsx":"3","C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\posts\\PostListComponent.tsx":"4","C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\posts\\CreatePostComponent.tsx":"5","C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\posts\\SinglePostComponent.tsx":"6","C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\posts\\PostDetailComponent.tsx":"7"},{"size":385,"mtime":1612356275325,"results":"8","hashOfConfig":"9"},{"size":1707,"mtime":1612964882904,"results":"10","hashOfConfig":"9"},{"size":314,"mtime":1612356275578,"results":"11","hashOfConfig":"9"},{"size":3047,"mtime":1612968657193,"results":"12","hashOfConfig":"9"},{"size":2064,"mtime":1612961872485,"results":"13","hashOfConfig":"9"},{"size":4036,"mtime":1612969356556,"results":"14","hashOfConfig":"9"},{"size":1611,"mtime":1612969638120,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1f70402",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\index.tsx",[],["33","34"],"C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\LiftingStateComponent.tsx",["35","36"],"import React, { useState } from \"react\";\r\nimport {StatisticsComponent} from \"./posts/StatisticsComponent\";\r\nimport {PostsListComponent} from \"./posts/PostListComponent\";\r\nimport { Post } from \"../models/Post\";\r\nimport { CreatePostCallback, EditPostCallback } from \"../models/CallbackInterfaces\";\r\nimport { DeletePostCallback } from \"./posts/SinglePostComponent\";\r\nimport { BrowserRouter, HashRouter, MemoryRouter } from \"react-router-dom\";\r\n\r\nexport const LiftingStateComponent: React.FunctionComponent = () => {\r\n\r\n    /**\r\n     * Stato della lista che contiene i post\r\n     */\r\n    let [listOfPost, setListOfPost] = useState<Post[]>([]);\r\n\r\n    /**\r\n     * Funzione di CallBack che chiede post in ingresso per aggiungerlo alla lista\r\n     * e aggiornare la vista\r\n     */\r\n    let callbackCreatePost: CreatePostCallback = (newPost) => {\r\n        setListOfPost(listOfPost.concat(newPost));\r\n    }\r\n\r\n    /**\r\n     * Funzione di CallBack che chiede id in ingresso per eliminarlo alla lista\r\n     * e aggiornare la vista\r\n     */\r\n    let callbackDeletePost: DeletePostCallback = (id) => {\r\n        setListOfPost(listOfPost.filter(item => item.id !== id));\r\n    }\r\n\r\n\r\n    /**\r\n     * Callback di modifica\r\n     */\r\n    let callbackEditPost: EditPostCallback = (editedPost) => {\r\n        setListOfPost(listOfPost.map(item => item.id === editedPost.id ? editedPost : item));\r\n        console.log(listOfPost);\r\n    }\r\n\r\n\r\n\r\n    return <>\r\n        <HashRouter>\r\n            <PostsListComponent editCallback={callbackEditPost} postList={listOfPost} createCallback={callbackCreatePost} deleteCallback={callbackDeletePost}/>\r\n            <StatisticsComponent lista={listOfPost}/>\r\n        </HashRouter>\r\n    </>\r\n}","C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\posts\\StatisticsComponent.tsx",[],"C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\posts\\PostListComponent.tsx",["37","38"],"import React, { useState } from \"react\";\r\nimport { CreatePostCallback, EditPostCallback } from \"../../models/CallbackInterfaces\";\r\nimport { Post } from \"../../models/Post\";\r\nimport { CreatePostComponent } from \"./CreatePostComponent\";\r\nimport { DeletePostCallback, SinglePostComponent } from \"./SinglePostComponent\";\r\nimport { BrowserRouter, Switch, Route, Link, useLocation } from \"react-router-dom\";\r\nimport { PostDetailComponent } from \"./PostDetailComponent\";\r\n\r\n\r\nexport interface PostsListComponentProps {\r\n    postList: Post[];\r\n    createCallback: CreatePostCallback;\r\n    deleteCallback: DeletePostCallback;\r\n    editCallback: EditPostCallback;\r\n}\r\n\r\n\r\nenum ERoute {\r\n    HOME = \"/\",\r\n    CREATE = \"/create\"\r\n};\r\n\r\n\r\n/**\r\n * PostListComponent priceve in infresso una lista di post e la passa al SinglePostComponent per generare la vista\r\n * riceve anche la callback di delete per eliminare un post\r\n */\r\nexport let PostsListComponent: React.FunctionComponent<PostsListComponentProps> = (props) => {\r\n\r\n    /*\r\n        Lista di rotte che abbiamo deciso:\r\n        1.  \"/\" -> lista di post\r\n        2. \"/create\" -> ambiente di creazione\r\n\r\n        Una rotta è l'associazione:\r\n            (percorso, componente da visualizzare)\r\n        il routing è di fatto l'insieme di tutte le rotte che sono\r\n        definite all'interno della nostra applicazione\r\n\r\n    */\r\n   let location = useLocation();\r\n\r\n    return (\r\n\r\n        <div className=\"postsListComponent\">\r\n\r\n            <div>Pathname: {location.pathname}</div>\r\n            \r\n            <div className=\"navbar\">\r\n                <Link to={ERoute.HOME}>Home</Link>\r\n                <Link to={ERoute.CREATE}>Create</Link>\r\n            </div>\r\n\r\n            <Switch>\r\n              \r\n              {/* Rotta 1 */}\r\n                <Route exact path={ERoute.HOME}>\r\n                    {props.postList.map((item, index) => <SinglePostComponent editCallback={props.editCallback} deleteCallback={props.deleteCallback} key={index} post={item}/>).reverse()}\r\n                </Route>\r\n\r\n\r\n                {/* Rotta 2 */}\r\n                <Route exact path={ERoute.CREATE}>\r\n                    <CreatePostComponent createCallback={(post) => { \r\n                        props.createCallback(post); \r\n                        //setPath(ERoute.HOME);\r\n                       \r\n                    }}/>\r\n                </Route>\r\n\r\n\r\n                {/* \r\n                 Rotta 3:  /post/:id   visualizzazione del post con id = :id \r\n                            /post/<???????>    =>     <???????>  sarà per voi il contenuto della variabile id\r\n                */}\r\n                 <Route exact path={\"/post/:id\"}>\r\n                     <PostDetailComponent editCallback={props.editCallback} deleteCallback={props.deleteCallback} postList={props.postList}  />\r\n                     {/* <SinglePostComponent  editCallback={props.editCallback} deleteCallback={props.deleteCallback} post={} /> */}\r\n                 </Route>\r\n\r\n                \r\n            </Switch>\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\posts\\CreatePostComponent.tsx",[],"C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\posts\\SinglePostComponent.tsx",[],"C:\\Users\\giacomo.dradi\\Desktop\\corso-react-fitstic\\app-react-fitstic\\src\\components\\posts\\PostDetailComponent.tsx",["39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":7,"column":10,"nodeType":"46","messageId":"47","endLine":7,"endColumn":23},{"ruleId":"44","severity":1,"message":"48","line":7,"column":37,"nodeType":"46","messageId":"47","endLine":7,"endColumn":49},{"ruleId":"44","severity":1,"message":"49","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"45","line":6,"column":10,"nodeType":"46","messageId":"47","endLine":6,"endColumn":23},{"ruleId":"44","severity":1,"message":"49","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'MemoryRouter' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]